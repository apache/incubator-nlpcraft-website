#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

fn-token:
  - name: tok_id
    sig: |
      <b>tok_id</b>(t: Token<em><sub>opt</sub></em>) ⇒ String
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getId()">token ID</a>
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getId()">token ID</a>
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: 'true' if the current token ID is equal to 'my_id'.
      tok_id() == 'my_id'
      tok_id(tok_this()) == 'my_id'

  - name: tok_lemma
    sig: |
      <b>tok_lemma</b>(t: Token<em><sub>opt</sub></em>) ⇒ String
    synopsis: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getLemma()">token lemma</a>
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getLemma()">token lemma</a>
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: 'true' if the current token lemma is equal to 'work'.
      tok_lemma() == 'work'
      tok_lemma(tok_this()) == 'work'

  - name: tok_stem
    sig: |
      <b>tok_stem</b>(t: Token<em><sub>opt</sub></em>) ⇒ String
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getStem()">token stem</a>
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getStem()">token stem</a>
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: 'true' if the current token stem is equal to 'work'.
      tok_stem() == 'work'
      tok_stem(tok_this()) == 'work'

  - name: tok_pos
    sig: |
      <b>tok_pos</b>(t: Token<em><sub>opt</sub></em>) ⇒ String
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getPos()">token PoS</a> tag
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getPos()">token PoS</a> tag
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: 'true' if the current token PoS tag is equal to 'NN'.
      tok_pos() == 'NN'
      tok_pos(tok_this()) == 'NN'

  - name: tok_sparsity
    sig: |
      <b>tok_sparsity</b>(t: Token<em><sub>opt</sub></em>) ⇒ Int
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getSparsity()">token sparsity</a> value
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getSparsity()">token sparsity</a> value
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: token sparsity value.
      tok_sparsity()
      tok_sparsity(tok_this())

  - name: tok_unid
    sig: |
      <b>tok_unid</b>(t: Token<em><sub>opt</sub></em>) ⇒ String
    synopsis: Returns internal <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getUnid()">token globally unique ID</a>
    desc: |
      Returns internal <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getUnid()">token globally unique ID</a>
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: internal token globally unique ID.
      tok_unid()
      tok_unid(tok_this())

  - name: tok_is_abstract
    sig: |
      <b>tok_is_abstract</b>(t: Token<em><sub>opt</sub></em>) ⇒ Boolean
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isAbstract()">token abstract</a> flag
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isAbstract()">token abstract</a> flag
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: token abstract flag.
      tok_is_abstract()
      tok_is_abstract(tok_this())

  - name: tok_is_bracketed
    sig: |
      <b>tok_is_bracketed</b>(t: Token<em><sub>opt</sub></em>) ⇒ Boolean
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isBracketed()">token bracketed</a> flag
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isBracketed()">token bracketed</a> flag
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: token bracketed flag.
      tok_is_bracketed()
      tok_is_bracketed(tok_this())

  - name: tok_is_direct
    sig: |
      <b>tok_is_direct</b>(t: Token<em><sub>opt</sub></em>) ⇒ Boolean
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isDirect()">token direct</a> flag
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isDirect()">token direct</a> flag
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: token direct flag.
      tok_is_direct()
      tok_is_direct(tok_this())

  - name: tok_is_permutated
    sig: |
      <b>tok_is_permutated</b>(t: Token<em><sub>opt</sub></em>) ⇒ Boolean
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isPermutated()">token permutated</a> flag
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isPermutated()">token permutated</a> flag
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: token permutated flag.
      tok_is_permutated()
      tok_is_permutated(tok_this())

  - name: tok_is_english
    sig: |
      <b>tok_is_english</b>(t: Token<em><sub>opt</sub></em>) ⇒ Boolean
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isEnglish()">token English</a> detection flag
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isEnglish()">token English</a> detection flag
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: token English detection flag.
      tok_is_english()
      tok_is_english(tok_this())

  - name: tok_is_freeword
    sig: |
      <b>tok_is_freeword</b>(t: Token<em><sub>opt</sub></em>) ⇒ Boolean
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isFreeWord()">token freeword</a> flag
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isFreeWord()">token freeword</a> flag
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: token freeword flag.
      tok_is_freeword()
      tok_is_freeword(tok_this())

  - name: tok_is_quoted
    sig: |
      <b>tok_is_quoted</b>(t: Token<em><sub>opt</sub></em>) ⇒ Boolean
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isQuoted()">token quoted</a> flag
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isQuoted()">token quoted</a> flag
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: token quoted flag.
      tok_is_quoted()
      tok_is_quoted(tok_this())

  - name: tok_is_stopword
    sig: |
      <b>tok_is_stopword</b>(t: Token<em><sub>opt</sub></em>) ⇒ Boolean
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isStopWord()">token stopword</a> flag
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isStopWord()">token stopword</a> flag
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: token stopword flag.
      tok_is_stopword()
      tok_is_stopword(tok_this())

  - name: tok_is_swear
    sig: |
      <b>tok_is_swear</b>(t: Token<em><sub>opt</sub></em>) ⇒ Boolean
    synopsis: Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isSwearWord()">token swear word</a> flag
    desc: |
      Returns <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isSwearWord()">token swear word</a> flag
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: token swear flag.
      tok_is_swear()
      tok_is_swear(tok_this())

  - name: tok_is_user
    sig: |
      <b>tok_is_user</b>(t: Token<em><sub>opt</sub></em>) ⇒ Boolean
    synopsis: Returns if this token is <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isUserDefined()">user-defined</a>
    desc: |
      Returns if this token is defined by <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isUserDefined()">user-defined</a> model element or a built-in element
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: wether or not this is defined by user model element vs. built-in,
      tok_is_user()
      tok_is_user(tok_this())

  - name: tok_is_wordnet
    sig: |
      <b>tok_is_wordnet</b>(t: Token<em><sub>opt</sub></em>) ⇒ Boolean
    synopsis: Returns if this token is part of <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isWordnet()">WordNet</a> dictionary
    desc: |
      Returns if this token's text is a known part of <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#isWordnet()">WordNet</a> dictionary
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>.
    usage: |
      // Result: whether or not this token is part of WordNet dictionary.
      tok_is_wordnet()
      tok_is_wordnet(tok_this())

  - name: tok_ancestors
    sig: |
      <b>tok_ancestors</b>(t: Token<em><sub>opt</sub></em>) ⇒ List[String]
    synopsis: Gets the <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getAncestors()">list of all parent IDs</a> for this token
    desc: |
      Gets the <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getAncestors()">list of all parent IDs</a>
      for the current token (default) or the provided one by the optional paremeter <code><b>t</b></code> up to the root.
      This only available for user-defined model elements - built-in tokens do not have parents and will return an empty list.
      May return an empty list but never a <code>null</code>.
    usage: |
      // Result: list of all ancestors.
      tok_ancestors()
      tok_ancestors(tok_this())

  - name: tok_parent
    sig: |
      <b>tok_parent</b>(t: Token<em><sub>opt</sub></em>) ⇒ String
    synopsis: Gets optional <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getParentId()">parent ID</a> for this token
    desc: |
      Gets the optional <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getParentId()">parent ID</a> of the
      model element the current token (default) or the provided one by the optional paremeter <code><b>t</b></code>
      represents. This only available for user-defined model elements - built-in tokens do not have parents and
      this will return <code>null</code>.
    usage: |
      // Result: list of all ancestors.
      tok_parent()
      tok_parent(tok_this())

  - name: tok_groups
    sig: |
      <b>tok_groups</b>(t: Token<em><sub>opt</sub></em>) ⇒ List[String]
    synopsis: Gets the list of <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getGroups()">groups</a> this token belongs to
    desc: |
      Gets the list of <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getGroups()">groups</a>
      the current token (default) or the provided one by the optional paremeter <code><b>t</b></code> belongs to. Note that,
      by default, if not specified explicitly, token always belongs to one group with ID equal to token ID.
      May return an empty list but never a <code>null</code>.
    usage: |
      // Result: list of groups this token belongs to.
      tok_groups()
      tok_groups(tok_this())

  - name: tok_value
    sig: |
      <b>tok_value</b>(t: Token<em><sub>opt</sub></em>) ⇒ String
    synopsis: Gets the <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getValue()">value</a> if this token was detected via element's value
    desc: |
      Gets the <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getValue()">value</a> if
      the current token (default) or the provided one by the optional paremeter <code><b>t</b></code> was detected via
      element's value (or its synonyms). Otherwise returns <code>null</code>. Only applicable for user-defined
      model elements - built-in tokens do not have values and it will return <code>null</code>.
    usage: |
      // Result: the token value if this token was detected via element's value
      tok_value()
      tok_value(tok_this())

  - name: tok_aliases
    sig: |
      <b>tok_aliases</b>(t: Token<em><sub>opt</sub></em>) ⇒ List[String]
    synopsis: Gets optional <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getAliases()">list of aliases</a> this token is known by
    desc: |
      Gets optional <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getAliases()">list of aliases</a>
      the current token (default) or the provided one by the optional paremeter <code><b>t</b></code> is known by. Token can get an alias if it is a part of
      other composed token and IDL expression that was used to match it specified an alias. Note
      that token can have zero, one or more aliases. May return an empty list but never a <code>null</code>.
    usage: |
      // Result: checks if this token is known by 'alias' alias.
      has(tok_aliases(), 'alias')
      has(tok_aliases(tok_this()), 'alias')

  - name: tok_start_idx
    sig: |
      <b>tok_start_idx</b>(t: Token<em><sub>opt</sub></em>) ⇒ Int
    synopsis: Gets <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getStartCharIndex()">start character index</a> of this token in the original text
    desc: |
      Gets <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getStartCharIndex()">start character index</a>
      of the current token (default) or the provided one by the optional paremeter <code><b>t</b></code> in the original text.
    usage: |
      // Result: start character index of this token in the original text.
      tok_start_idx()
      tok_start_idx(tok_this())

  - name: tok_end_idx
    sig: |
      <b>tok_end_idx</b>(t: Token<em><sub>opt</sub></em>) ⇒ Int
    synopsis: Gets <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getEndCharIndex()">end character index</a> of this token in the original text
    desc: |
      Gets <a class="not-code" target="javadoc" href="/apis/latest/org/apache/nlpcraft/model/NCToken.html#getEndCharIndex()">end character index</a>
      of the current token (default) or the provided one by the optional paremeter <code><b>t</b></code> in the original text.
    usage: |
      // Result: end character index of this token in the original text.
      tok_end_idx()
      tok_end_idx(tok_this())

  - name: tok_this
    sig: |
      <b>tok_this</b>() ⇒ Token
    synopsis: Returns current token.
    desc: |
      Returns current token.
    usage: |
      // Result: current token.
      tok_this()

  - name: tok_find_part
    sig: |
      <b>tok_find_part</b>(t: Token, a: String) ⇒ Token
    synopsis: Finds part token with given alias or ID.
    desc: |
      Finds part token with given ID or aliase traversing entire part token graph. The start token is provided
      by <code><b>t</b></code> parameter. Token ID or alias to find is defined by <code><b>a</b></code> parameter. This function
      throws runtime exception if given alias or ID cannot be found or more than one token is found. This function
      never returns <code>null</code>. If more than one token is expected - use <code>tok_find_parts()</code>
      function instead. See also <code>tok_has_part()</code> function to check if certain part token exists.
    usage: |
      // Result: part token of the current token found by 'alias' alias,
      //         if any, or throws runtime exception.
      tok_find_part(tok_this(), 'alias')

  - name: tok_has_part
    sig: |
      <b>tok_has_part</b>(t: Token, a: String) ⇒ Boolean
    synopsis: Checks if part token with given alias or ID exists.
    desc: |
      Checks the existence of the part token with given ID or aliase traversing entire part token graph.
      The start token is provided by <code><b>t</b></code> parameter. Token ID or alias to find is defined by <code><b>a</b></code>
      parameter. See also <code>if()</code> function for 'if-then-else' branching support.
    usage: |
      // Result: 'true' if part token of the current token found by 'alias' alias, 'false' otherwise.
      tok_has_part(tok_this(), 'alias')

      // Result: part token 'alias' if it exists or the current token if it does not.
      @tok = if(tok_has_part(tok_this(), 'alias'), tok_find_part(tok_this(), 'alias'), tok_this())

  - name: tok_find_parts
    sig: |
      <b>tok_find_parts</b>(t: Token, a: String) ⇒ List[Token]
    synopsis: Finds part tokens with given alias or ID.
    desc: |
      Finds part tokens with given ID or aliase traversing entire part token graph. The start token is provided
      by <code><b>t</b></code> parameter. Token ID or alias to find is defined by <code><b>a</b></code> parameter. This function
      may return an empty list but never a <code>null</code>.
    usage: |
      // Result: list of part tokens, potentially empty, of the current token found by 'alias' alias.
      tok_find_parts(tok_this(), 'alias')

      // Result: part token 'alias' if it exists or the current token if it does not.
      @parts = tok_find_parts(tok_this(), 'alias')
      @tok = if(is_empty(@parts), tok_this(), first(@parts))


fn-datetime:
fn-math:

fn-other:
  - name: if
    sig: |
      <b>if</b>(c: Boolean, then: Any: else: Any) ⇒ Any
    synopsis: This function provides 'if-then-else' equivalent
    desc: |
      This function provides 'if-then-else' equivalent as IDL does not provide branching
      on the language level. This function will evaluate <code><b>c</b></code> parameter and either
      return <code><b>then</b></code> value if it evaluates to <code>true</code> or <code><b>else</b></code>
      value in case if it evaluates to <code>false</code>. Note that evaluation will be
      short-circuit, i.e. either <code><b>then</b></code> or <code><b>else</b></code> will actually be
      computed but not both.
    usage: |
      // Result:
      //  - 'list(1, 2, 3)' if 1st parameter is 'true'.
      //  - 'null' if 1st parameter is 'false'.
      if(meta_model('my_prop') == true, list(1, 2, 3), null)

  - name: json
    sig: |
      <b>json</b>(p: String) ⇒ Map[String, Any]
    synopsis: Converts JSON in <code><b>p</b></code> parameter to a map
    desc: |
      Converts JSON in <code><b>p</b></code> parameter to a map. Use single quoted
      string to avoid escaping double quotes in JSON.
    usage: |
      // Result: Map.
      json('{"a": 2, "b": [1, 2, 3]}')

  - name: to_string
    sig: |
      <b>to_string</b>(p: Any) ⇒ {String|List[String]}
    synopsis: Converts <code><b>p</b></code> parameter to a string
    desc: |
      Converts <code><b>p</b></code> parameter to a string. In case of a list
      this function will convert individual list elements to string and return the
      list of strings.
    usage: |
      // Result: "1.25"
      to_string(1.25)
      // Result: list("1", "2", "3")
      to_string(list(1, 2, 3))

  - name: or_else
    sig: |
      <b>or_else</b>(p: Any, a: Any) ⇒ Any
    synopsis: Returns <code><b>p</b></code> if it is not <code>null</code>, <code><b>a</b></code> otherwise
    desc: |
      Returns <code><b>p</b></code> if it is not <code>null</code>, <code><b>a</b></code> otherwise.
      Note that evaluation will be short-circuit, i.e. <code><b>a</b></code> will be evaluated only
      if <code><b>p</b></code> is <code>null</code>.
    usage: |
      // Result: 'some_prop' model metadata or 'text' if one does not exist.
      @dflt = 'text'
      or_else(meta_model('some_prop'), @dflt)

fn-text:
  - name: length
    sig: |
      <b>length</b>(p: {String|List|Map}) ⇒ Int
    synopsis: Returns size or length of the given string, list or map
    desc: |
      Returns size or length of the given string, list or map. This function has
      aliases: <code><b>size()</b></code> and <code><b>count()</b></code>.
    usage: |
      // Result: 9
      length("some text")

      // Result: 3
      @lst = list(1, 2, 3)
      size(@lst)
      count(@lst)

  - name: trim
    sig: |
      <b>trim</b>(p: String) ⇒ Int
    synopsis: Calls <a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#trim()"><code>String.trim()</code></a>
    desc: |
      Calls <a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#trim()"><code>String.trim()</code></a> on
      given parameter <code><b>p</b></code> and returns its result. This function has alias: <code><b>strip()</b></code>
    usage: |
      // Result: "text"
      trim(" text ")
      strip(" text ")

  - name: uppercase
    sig: |
      <b>uppercase</b>(p: String) ⇒ String
    synopsis: Calls <a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#toUpperCase()"><code>String.toUpperCase()</code></a>
    desc: |
      Calls <a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#toUpperCase()"><code>String.toUpperCase()</code></a>
      on given parameter <code><b>p</b></code> and returns its result.
    usage: |
      // Result: "TEXT"
      uppercase("text")

  - name: lowercase
    sig: |
      <b>lowercase</b>(p: String) ⇒ String
    synopsis: Calls <a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#toLowerCase()"><code>String.toLowerCase()</code></a>
    desc: |
      Calls <a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#toLowerCase()"><code>String.toLowerCase()</code></a>
      on given parameter <code><b>p</b></code> and returns its result.
    usage: |
      // Result: "text"
      lowercase("TeXt")

  - name: is_alpha
    sig: |
      <b>is_alpha</b>(p: String) ⇒ Boolean
    synopsis: Calls <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isAlpha-java.lang.CharSequence-"><code>StringUtils.isAlpha()</code></a>
    desc: |
      Calls <a target="asf" href="http://commons.apache.org/">Apache Commons</a> <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isAlpha-java.lang.CharSequence-"><code>StringUtils.isAlpha()</code></a>
      on given parameter <code><b>p</b></code> and returns its result.
    usage: |
      // Result: true
      is_alpha("text")

  - name: is_alphanum
    sig: |
      <b>is_alphanum</b>(p: String) ⇒ Boolean
    synopsis: Calls <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isAlphanumeric-java.lang.CharSequence-"><code>StringUtils.isAlphanumeric()</code></a>
    desc: |
      Calls <a target="asf" href="http://commons.apache.org/">Apache Commons</a> <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isAlphanumeric-java.lang.CharSequence-"><code>StringUtils.isAlphanumeric()</code></a>
      on given parameter <code><b>p</b></code> and returns its result.
    usage: |
      // Result: true
      is_alphanum("text123")

  - name: is_whitespace
    sig: |
      <b>is_whitespace</b>(p: String) ⇒ Boolean
    synopsis: Calls <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isWhitespace-java.lang.CharSequence-"><code>StringUtils.isWhitespace()</code></a>
    desc: |
      Calls <a target="asf" href="http://commons.apache.org/">Apache Commons</a> <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isWhitespace-java.lang.CharSequence-"><code>StringUtils.isWhitespace()</code></a>
      on given parameter <code><b>p</b></code> and returns its result.
    usage: |
      // Result: false
      is_whitespace("text123")
      // Result: true
      is_whitespace("   ")

  - name: is_num
    sig: |
      <b>is_num</b>(p: String) ⇒ Boolean
    synopsis: Calls <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isNumeric-java.lang.CharSequence-"><code>StringUtils.isNumeric()</code></a>
    desc: |
      Calls <a target="asf" href="http://commons.apache.org/">Apache Commons</a> <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isNumeric-java.lang.CharSequence-"><code>StringUtils.isNumeric()</code></a>
      on given parameter <code><b>p</b></code> and returns its result.
    usage: |
      // Result: true
      is_num("123")

  - name: is_numspace
    sig: |
      <b>is_numspace</b>(p: String) ⇒ Boolean
    synopsis: Calls <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isNumericSpace-java.lang.CharSequence-"><code>StringUtils.isNumericSpace()</code></a>
    desc: |
      Calls <a target="asf" href="http://commons.apache.org/">Apache Commons</a> <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isNumericSpace-java.lang.CharSequence-"><code>StringUtils.isNumericSpace()</code></a>
      on given parameter <code><b>p</b></code> and returns its result.
    usage: |
      // Result: true
      is_numspace("  123")

  - name: is_alphaspace
    sig: |
      <b>is_alphaspace</b>(p: String) ⇒ Boolean
    synopsis: Calls <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isAlphaSpace-java.lang.CharSequence-"><code>StringUtils.isAlphaSpace()</code></a>
    desc: |
      Calls <a target="asf" href="http://commons.apache.org/">Apache Commons</a> <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isAlphaSpace-java.lang.CharSequence-"><code>StringUtils.isAlphaSpace()</code></a>
      on given parameter <code><b>p</b></code> and returns its result.
    usage: |
      // Result: true
      is_alphaspace("  text  ")

  - name: is_alphanumspace
    sig: |
      <b>is_alphanumspace</b>(p: String) ⇒ Boolean
    synopsis: Calls <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isAlphaNumericSpace-java.lang.CharSequence-"><code>StringUtils.isAlphaNumericSpace()</code></a>
    desc: |
      Calls <a target="asf" href="http://commons.apache.org/">Apache Commons</a> <a target="javadoc" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isAlphaNumericSpace-java.lang.CharSequence-"><code>StringUtils.isAlphaNumericSpace()</code></a>
      on given parameter <code><b>p</b></code> and returns its result.
    usage: |
      // Result: true
      is_alphanumspace(" 123 text  ")

  - name: split
    sig: |
      <b>split</b>(p1: String, p2: String) ⇒ List[String]
    synopsis: Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#split(java.lang.String)"><code>split(<b>p2</b>)</code></a>
    desc: |
      Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#split(java.lang.String)"><code>split(<b>p2</b>)</code></a>
      and returns its result converted to the list.
    usage: |
      // Result: [ "a", "b", "c" ]
      split("a|b|c", "|")

  - name: split_trim
    sig: |
      <b>split_trim</b>(p1: String, p2: String) ⇒ List[String]
    synopsis: Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#split(java.lang.String)"><code>split(<b>p2</b>)</code></a>
    desc: |
      Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#split(java.lang.String)"><code>split(<b>p2</b>)</code></a>
      converting the result to the list. Then
      calls <a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#strip()">String.strip()</a> on each
      element.
    usage: |
      // Result: ["a", "b", "c"]
      split_trim("a | b | c", "|")

  - name: starts_with
    sig: |
      <b>starts_with</b>(p1: String, p2: String) ⇒ Boolean
    synopsis: Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#split(java.lang.String)"><code>startsWith(<b>p2</b>)</code></a>
    desc: |
      Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#split(java.lang.String)"><code>startsWith(<b>p2</b>)</code></a>
      and returns its result.
    usage: |
      // Result: true
      starts_width("abc", "ab")

  - name: ends_with
    sig: |
      <b>ends_with</b>(p1: String, p2: String) ⇒ Boolean
    synopsis: Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#split(java.lang.String)"><code>endsWith(<b>p2</b>)</code></a>
    desc: |
      Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#split(java.lang.String)"><code>endsWith(<b>p2</b>)</code></a>
      and returns its result.
    usage: |
      // Result: true
      ends_width("abc", "bc")

  - name: contains
    sig: |
      <b>contains</b>(p1: String, p2: String) ⇒ Boolean
    synopsis: Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#contains(java.lang.CharSequence)"><code>contains(<b>p2</b>)</code></a>
    desc: |
      Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#contains(java.lang.CharSequence)"><code>contains(<b>p2</b>)</code></a>
      and returns its result.
    usage: |
      // Result: true
      contains("abc", "bc")

  - name: index_of
    sig: |
      <b>index_of</b>(p1: String, p2: String) ⇒ Int
    synopsis: Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#indexOf(java.lang.String)"><code>indexOf(<b>p2</b>)</code></a>
    desc: |
      Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#indexOf(java.lang.String)"><code>indexOf(<b>p2</b>)</code></a>
      and returns its result.
    usage: |
      // Result: 1
      index_of("abc", "bc")

  - name: substr
    sig: |
      <b>substr</b>(p1: String, p2: Int, p3: Int) ⇒ String
    synopsis: Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#substring(int,int)"><code>substring(<b>p2</b>, <b>p3</b>)</code></a>
    desc: |
      Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#substring(int,int)"><code>substring(<b>p2</b>, <b>p3</b>)</code></a>
      and returns its result.
    usage: |
      // Result: "bc"
      substr("abc", 1, 3)

  - name: replace
    sig: |
      <b>replace</b>(p1: String, p2: String, p3: String) ⇒ String
    synopsis: Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#replace(java.lang.CharSequence,java.lang.CharSequence)"><code>replace(<b>p2</b>, <b>p3</b>)</code></a>
    desc: |
      Calls <code><b>p1</b></code>.<a target="javadoc" href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html#replace(java.lang.CharSequence,java.lang.CharSequence)"><code>replace(<b>p2</b>, <b>p3</b>)</code></a>
      and returns its result.
    usage: |
      // Result: "aBC"
      replace("abc", "bc", "BC")

  - name: to_double
    sig: |
      <b>to_double</b>(p1: {Int|String}) ⇒ Double
    synopsis: Converts given integer or string to double value
    desc: |
      Converts given integer or string to double value.
    usage: |
      // Result: 1.2
      to_double("1.2")
      // Result: 1.0
      to_double(1)

  - name: to_int
    sig: |
      <b>to_int</b>(p1: {Double|String}) ⇒ Int
    synopsis: Converts given double or string to integer value
    desc: |
      Converts given double or string to integer value. In case of double
      value it will be rounded to the nearest integer value.
    usage: |
      // Result: 1
      to_int("1.2")
      to_int(1.2)
